// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LuaIterable with LuaMultiReturn value type invalid LuaIterable<LuaMultiReturn> without destructuring ("for (const s of testIterable()) {}"): code 1`] = `
"local ____exports = {}
function ____exports.__main(self)
    local function testIterable()
        local strsArray = {{\\"a1\\", \\"a2\\"}, {\\"b1\\", \\"b2\\"}, {\\"c1\\", \\"c2\\"}}
        local i = 0
        return function()
            local strs = strsArray[(function()
                local ____tmp = i
                i = ____tmp + 1
                return ____tmp
            end)() + 1]
            if strs then
                return table.unpack(strs)
            end
        end
    end
    for ____ in testIterable() do
    end
end
return ____exports"
`;

exports[`LuaIterable with LuaMultiReturn value type invalid LuaIterable<LuaMultiReturn> without destructuring ("for (const s of testIterable()) {}"): diagnostics 1`] = `"main.ts(14,24): error TSTL: LuaIterable with a LuaMultiReturn return value type must be destructured."`;

exports[`LuaIterable with LuaMultiReturn value type invalid LuaIterable<LuaMultiReturn> without destructuring ("let s; for (s of testIterable()) {}"): code 1`] = `
"local ____exports = {}
function ____exports.__main(self)
    local function testIterable()
        local strsArray = {{\\"a1\\", \\"a2\\"}, {\\"b1\\", \\"b2\\"}, {\\"c1\\", \\"c2\\"}}
        local i = 0
        return function()
            local strs = strsArray[(function()
                local ____tmp = i
                i = ____tmp + 1
                return ____tmp
            end)() + 1]
            if strs then
                return table.unpack(strs)
            end
        end
    end
    local s
    for ____ in testIterable() do
    end
end
return ____exports"
`;

exports[`LuaIterable with LuaMultiReturn value type invalid LuaIterable<LuaMultiReturn> without destructuring ("let s; for (s of testIterable()) {}"): diagnostics 1`] = `"main.ts(14,25): error TSTL: LuaIterable with a LuaMultiReturn return value type must be destructured."`;
