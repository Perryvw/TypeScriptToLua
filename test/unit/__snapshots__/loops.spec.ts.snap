// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`forin[Array]: code 1`] = `
"local ____exports = {}
function ____exports.__main(self)
    local array = {}
    for key in pairs(array) do
    end
end
return ____exports"
`;

exports[`forin[Array]: diagnostics 1`] = `"main.ts(3,9): error TSTL: Iterating over arrays with 'for ... in' is not allowed."`;

exports[`forof object destructuring ({"initializer": "{a, b}", "vars": "let a: string, b: string;"}): code 1`] = `
"for ____, ____value in ipairs(arr) do
end"
`;

exports[`forof object destructuring ({"initializer": "{a, b}", "vars": "let a: string, b: string;"}): diagnostics 1`] = `"main.ts(4,14): error TSTL: Unsupported object destructuring in for...of statement."`;

exports[`forof object destructuring ({"initializer": "{a: c, b: d}", "vars": "let c: string, d: string;"}): code 1`] = `
"for ____, ____value in ipairs(arr) do
end"
`;

exports[`forof object destructuring ({"initializer": "{a: c, b: d}", "vars": "let c: string, d: string;"}): diagnostics 1`] = `"main.ts(4,14): error TSTL: Unsupported object destructuring in for...of statement."`;

exports[`forof object destructuring ({"initializer": "const {a, b}", "vars": ""}): code 1`] = `
"for ____, ____values in ipairs(arr) do
end"
`;

exports[`forof object destructuring ({"initializer": "const {a, b}", "vars": ""}): diagnostics 1`] = `"main.ts(4,14): error TSTL: Unsupported object destructuring in for...of statement."`;

exports[`forof object destructuring ({"initializer": "const {a: x, b: y}", "vars": ""}): code 1`] = `
"for ____, ____values in ipairs(arr) do
end"
`;

exports[`forof object destructuring ({"initializer": "const {a: x, b: y}", "vars": ""}): diagnostics 1`] = `"main.ts(4,14): error TSTL: Unsupported object destructuring in for...of statement."`;

exports[`loop continue (do { continue; } while (false)) [5.1]: code 1`] = `
"repeat
    do
        do
            goto __continue2
        end
        ::__continue2::
    end
until not false"
`;

exports[`loop continue (do { continue; } while (false)) [5.1]: diagnostics 1`] = `"main.ts(1,6): error TSTL: Continue statement is/are not supported for target Lua 5.1."`;

exports[`loop continue (for (;;) { continue; }) [5.1]: code 1`] = `
"do
    while true do
        do
            goto __continue2
        end
        ::__continue2::
    end
end"
`;

exports[`loop continue (for (;;) { continue; }) [5.1]: diagnostics 1`] = `"main.ts(1,12): error TSTL: Continue statement is/are not supported for target Lua 5.1."`;

exports[`loop continue (for (const a in {}) { continue; }) [5.1]: code 1`] = `
"for a in pairs({}) do
    do
        goto __continue2
    end
    ::__continue2::
end"
`;

exports[`loop continue (for (const a in {}) { continue; }) [5.1]: diagnostics 1`] = `"main.ts(1,23): error TSTL: Continue statement is/are not supported for target Lua 5.1."`;

exports[`loop continue (for (const a of []) { continue; }) [5.1]: code 1`] = `
"for ____, a in ipairs({}) do
    do
        goto __continue2
    end
    ::__continue2::
end"
`;

exports[`loop continue (for (const a of []) { continue; }) [5.1]: diagnostics 1`] = `"main.ts(1,23): error TSTL: Continue statement is/are not supported for target Lua 5.1."`;

exports[`loop continue (while (false) { continue; }) [5.1]: code 1`] = `
"while false do
    do
        goto __continue2
    end
    ::__continue2::
end"
`;

exports[`loop continue (while (false) { continue; }) [5.1]: diagnostics 1`] = `"main.ts(1,17): error TSTL: Continue statement is/are not supported for target Lua 5.1."`;
