// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transformation (blockScopeVariables) 1`] = `
"do
    local a = 1
    local b = 1
    local ____ = {c = 1}
    local c = ____.c
end"
`;

exports[`Transformation (characterEscapeSequence) 1`] = `
"quoteInDoubleQuotes = \\"' ' '\\"
quoteInTemplateString = \\"' ' '\\"
doubleQuoteInQuotes = \\"\\\\\\" \\\\\\" \\\\\\"\\"
doubleQuoteInDoubleQuotes = \\"\\\\\\" \\\\\\" \\\\\\"\\"
doubleQuoteInTemplateString = \\"\\\\\\" \\\\\\" \\\\\\"\\"
backQuoteInQuotes = \\"\` \` \`\\"
backQuoteInDoubleQuotes = \\"\` \` \`\\"
backQuoteInTemplateString = \\"\` \` \`\\"
escapedCharsInQuotes = \\"\\\\\\\\ \\\\0 \\\\b \\\\t \\\\n \\\\v \\\\f \\\\\\" ' \`\\"
escapedCharsInDoubleQuotes = \\"\\\\\\\\ \\\\0 \\\\b \\\\t \\\\n \\\\v \\\\f \\\\\\" ' \`\\"
escapedCharsInTemplateString = \\"\\\\\\\\ \\\\0 \\\\b \\\\t \\\\n \\\\v \\\\f \\\\\\" ' \`\\"
nonEmptyTemplateString = (\\"Level 0: \\\\n\\\\t \\" .. ((\\"Level 1: \\\\n\\\\t\\\\t \\" .. ((\\"Level 3: \\\\n\\\\t\\\\t\\\\t \\" .. \\"Last level \\\\n --\\") .. \\" \\\\n --\\")) .. \\" \\\\n --\\")) .. \\" \\\\n --\\""
`;

exports[`Transformation (classExtension1) 1`] = `
"function MyClass.myFunction(self)
end"
`;

exports[`Transformation (classExtension2) 1`] = `
"function TestClass.myFunction(self)
end"
`;

exports[`Transformation (classExtension3) 1`] = `
"function RenamedTestClass.myFunction(self)
end
function RenamedMyClass.myFunction(self)
end"
`;

exports[`Transformation (classExtension4) 1`] = `
"MyClass.test = \\"test\\"
MyClass.testP = \\"testP\\"
function MyClass.myFunction(self)
end"
`;

exports[`Transformation (classPureAbstract) 1`] = `
"require(\\"lualib_bundle\\");
ClassB = __TS__Class()
ClassB.name = \\"ClassB\\"
function ClassB.prototype.____constructor(self)
end"
`;

exports[`Transformation (globalAugmentation) 1`] = `
"local ____exports = globalVariable
return ____exports"
`;

exports[`Transformation (methodRestArguments) 1`] = `
"require(\\"lualib_bundle\\");
MyClass = __TS__Class()
MyClass.name = \\"MyClass\\"
function MyClass.prototype.____constructor(self)
end
function MyClass.prototype.varargsFunction(self, a, ...)
end"
`;

exports[`Transformation (modulesClassExport) 1`] = `
"require(\\"lualib_bundle\\");
local ____exports = {}
____exports.TestClass = __TS__Class()
local TestClass = ____exports.TestClass
TestClass.name = \\"TestClass\\"
function TestClass.prototype.____constructor(self)
end
return ____exports"
`;

exports[`Transformation (modulesFunctionExport) 1`] = `
"local ____exports = {}
function ____exports.publicFunc(self)
end
return ____exports"
`;

exports[`Transformation (modulesFunctionNoExport) 1`] = `
"function publicFunc(self)
end"
`;

exports[`Transformation (modulesNamespaceExport) 1`] = `
"local ____exports = {}
____exports.TestSpace = {}
return ____exports"
`;

exports[`Transformation (modulesNamespaceNestedWithMemberExport) 1`] = `
"local ____exports = {}
____exports.TestSpace = {}
local TestSpace = ____exports.TestSpace
do
    TestSpace.TestNestedSpace = {}
    local TestNestedSpace = TestSpace.TestNestedSpace
    do
        function TestNestedSpace.innerFunc(self)
        end
    end
end
return ____exports"
`;

exports[`Transformation (modulesNamespaceNoExport) 1`] = `"TestSpace = TestSpace or ({})"`;

exports[`Transformation (modulesNamespaceWithMemberExport) 1`] = `
"local ____exports = {}
____exports.TestSpace = {}
local TestSpace = ____exports.TestSpace
do
    function TestSpace.innerFunc(self)
    end
end
return ____exports"
`;

exports[`Transformation (modulesNamespaceWithMemberNoExport) 1`] = `
"local ____exports = {}
____exports.TestSpace = {}
do
    local function innerFunc(self)
    end
end
return ____exports"
`;

exports[`Transformation (namespacePhantom) 1`] = `
"function nsMember(self)
end"
`;

exports[`Transformation (returnDefault) 1`] = `
"function myFunc(self)
    return
end"
`;
